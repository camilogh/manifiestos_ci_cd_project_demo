apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "demo-project-app.fullname" . }}-api-service
  labels:
    {{- include "demo-project-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: api-service
spec:
  replicas: {{ .Values.apiService.replicaCount }}
  selector:
    matchLabels:
      {{- include "demo-project-app.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api-service
  template:
    metadata:
      labels:
        {{- include "demo-project-app.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api-service
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 12 }}
      {{- end }}
      containers:
      - name: api-service
        image: "{{ .Values.apiService.image.repository }}:{{ .Values.apiService.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.apiService.image.pullPolicy }}
        ports:
        - containerPort: 3001
        env:
        - name: NODE_ENV
          value: {{ .Values.apiService.nodeEnv }}
        - name: DB_HOST
          value: {{ include "demo-project-app.fullname" . }}-mysql-service # Apunta al servicio de MySQL del Chart
        - name: DB_PORT
          value: "3306"
        envFrom:
        - secretRef:
            name: {{ include "demo-project-app.fullname" . }}-mysql-credentials
        resources:
          {{- toYaml .Values.apiService.resources | nindent 14 }}